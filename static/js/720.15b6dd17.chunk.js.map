{"version":3,"file":"static/js/720.15b6dd17.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/helpers/api.js","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nexport const MovieItem = styled.li`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px;  \n  margin-left: auto;\n  margin-right: auto;\n  width: calc((100% - 120px) / 5);\n`;\n\nexport const LinkStyled = styled(Link)`\ncolor: black;\n`;\nexport const Image = styled.img`\nheight: 400px;\n`;\nexport const Title = styled.h3`\nwidth: 260px;\ntext-wrap: wrap;\ntext-align: center;\n`;","\nimport { MovieItem, LinkStyled,Image, Title } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { TheMovieDbAPI } from 'components/helpers/api';\n\n\n\nexport function MoviesList({ id, title,poster_path }) {\n    const location = useLocation();\n  return (\n    <MovieItem key={id}>\n      <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n        <Image src={`${TheMovieDbAPI.IMG_URL + poster_path}`} alt={title} />        \n        <Title>{title}</Title>\n      </LinkStyled>\n    </MovieItem>\n  );\n}\n\n\nMoviesList.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};","import axios from 'axios';\n\nexport class TheMovieDbAPI {\n  static BASE_URL = 'https://api.themoviedb.org/3';\n  static API_KEY = '1deae1a36202e3ac8c29219a3d453e0f';\n  static IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  constructor() {\n    this.page = 1;\n    this.query = null;\n    this.per_page = 20;\n  }\n\n  async getPopularFilms(pageNumber) {\n    this.page = pageNumber;\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/trending/movie/week`,\n      {\n        params: {\n          api_key: TheMovieDbAPI.API_KEY,\n          page: this.page,\n        },\n      }\n    );\n\n    return response;\n  }\n\n  async fetchUniqFilms(query) {\n    const searchParams = {\n      params: {\n        language: 'en-US',\n        page: this.page,\n        query: this.query,\n        api_key: TheMovieDbAPI.API_KEY,\n      },\n    };\n\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/search/movie`,\n      searchParams\n    );\n\n    return response;\n  }\n\n  async getMovieInfoById(id) {\n    const response = await axios.get(`${TheMovieDbAPI.BASE_URL}/movie/${id}?`, {\n      params: {\n        api_key: TheMovieDbAPI.API_KEY,\n      },\n    });\n\n    return response;\n  }\n\n  async getCastInfo(id) {\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/movie/${id}/credits?`,\n      {\n        params: {\n          api_key: TheMovieDbAPI.API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n\n    return response;\n  }\n\n  async getReviews(id) {\n    const response = await axios.get(\n      `${TheMovieDbAPI.BASE_URL}/movie/${id}/reviews?`,\n      {\n        params: {\n          api_key: TheMovieDbAPI.API_KEY,\n          language: 'en-US',\n          page: this.page,\n        },\n      }\n    );\n    return response;\n  }\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100px;\n  margin-left: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 2px solid #ccc;\n  padding: 10px;\n  font-size: 16px;\n  flex: 1;\n`;\n\nexport const Button = styled.button`\n  background-color: #f39c1c;\n  border: none;\n  color: white;\n  padding: 12px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin-left: 10px;\n  cursor: pointer;\n  &:hover {\n    background-color: #818080;\n  }\n`;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from './SearchForm.styled';\n\nfunction SearchForm({ onSubmit, defaultValue }) {\n  const searhRef = useRef();\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    onSubmit(searhRef.current.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmitForm}>\n      <Input defaultValue={defaultValue} ref={searhRef} type=\"text\" required />\n      <Button>Search</Button>\n    </Form>\n  );\n}\n\nSearchForm.propTypes = {\n  defaultValue: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nexport default SearchForm;","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { TheMovieDbAPI } from 'components/helpers/api';\nimport { MovieList } from './Movies.styled';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport PropTypes from 'prop-types';\n\nconst theMovieDbAPI = new TheMovieDbAPI();\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n  theMovieDbAPI.query = searchQuery;\n  useEffect(() => {\n    if (searchQuery === null) return;\n\n    const getMovies = async () => {\n      try {\n        const { data } = await theMovieDbAPI.fetchUniqFilms();\n        if (data.results.length === 0) {\n          setError('Movie not found...');\n        } else {\n          setMovies(data.results);\n          setError(null);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getMovies();\n  }, [searchQuery]);\n\n  const onSubmit = searchValue => {\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <section>\n      <SearchForm defaultValue={searchQuery} onSubmit={onSubmit} />\n      <MovieList>\n        {movies.length !== 0 &&\n          movies.map(movie => {\n            return <MoviesList {...movie} key={movie.id} />;\n          })}\n      </MovieList>\n      {error && <p>{error}</p>}\n    </section>\n  );\n}\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Movies;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["MovieItem","styled","LinkStyled","Link","Image","Title","MoviesList","id","title","poster_path","location","useLocation","to","state","from","src","TheMovieDbAPI","alt","this","page","query","per_page","pageNumber","axios","BASE_URL","params","api_key","API_KEY","response","searchParams","language","IMG_URL","Form","Input","Button","onSubmit","defaultValue","searhRef","useRef","event","preventDefault","current","value","ref","type","required","MovieList","theMovieDbAPI","useState","movies","setMovies","error","setError","useSearchParams","setSearchParams","searchQuery","get","useEffect","getMovies","fetchUniqFilms","data","results","length","message","searchValue","map","movie","key","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}